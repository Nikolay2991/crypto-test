{"version":3,"sources":["BalanceWallet/BalanceWallet.jsx","App/App.jsx","index.js"],"names":["BalanceWallet","useState","submit","setSubmit","address","setAddress","coin","setCoin","coinInfo","useRef","useEffect","fetchMyAPI","fetch","method","responce","json","result","className","onSubmit","e","preventDefault","target","value","reset","handleSubmit","type","name","placeholder","ref","addrStr","balance","href","onClick","key","arrRes","push","blob","Blob","join","url","window","URL","createObjectURL","anchor","document","createElement","download","body","append","style","click","remove","App","crypto","setCrypto","limit","setLimit","data","map","item","rank","priceUsd","uuidv4","prev","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.ff1c244b.chunk.js","sourcesContent":["import './BalanceWallet.css';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\n\r\nfunction BalanceWallet () {\r\n\r\n    const [submit, setSubmit] = useState(false);\r\n    const [address, setAddress] = useState('');\r\n    const [coin, setCoin] = useState('');\r\n    const coinInfo = useRef(null);\r\n\r\n    function handleSubmit (e) {\r\n        e.preventDefault();\r\n        setAddress(e.target.address.value);\r\n        setSubmit(!submit);\r\n        e.target.reset();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!!address) {\r\n            async function fetchMyAPI() {\r\n                const responce = await fetch(`https://btcbook.guarda.co/api/address/${address}`, {\r\n                    method: \"GET\"\r\n                });\r\n                const result = await responce.json();\r\n                setCoin(result);\r\n            }\r\n            fetchMyAPI()\r\n        }\r\n\r\n    }, [submit])\r\n\r\n    function handleClick () {\r\n        async function fetchMyAPI() {\r\n            const responce = await fetch(`https://btcbook.guarda.co/api/address/${address}`, {\r\n                method: \"GET\"\r\n            });\r\n            const result = await responce.json();\r\n            const arrRes = []\r\n            for (let key in result) {\r\n                arrRes.push(`${key}, ${result[key]}`);\r\n            }\r\n            const blob = new Blob([arrRes.join('\\n')], {type : 'text/scv'});\r\n            let url = window.URL.createObjectURL(blob);\r\n            let anchor = document.createElement('a');\r\n            anchor.href = url;\r\n            anchor.download = 'balance.csv';\r\n            document.body.append(anchor);\r\n            anchor.style = 'display: none';\r\n            anchor.click();\r\n            anchor.remove();\r\n        }\r\n        fetchMyAPI()\r\n    }\r\n    return (\r\n        <>\r\n            <h2 className='text-center mb-2'>Проверка баланса кошелька BTC</h2>\r\n            <form onSubmit={(e) => handleSubmit(e)} className=\"form-wallet d-flex\">\r\n                    <input type=\"text\" className='form-wallet__input form-control me-3' name='address' placeholder='Введите номер кошелька'/>\r\n                    <button className='form-wallet__btn btn btn-warning' type='submit'>Узнать баланс</button>\r\n            </form>\r\n            {coin &&\r\n                <div className='result-wallet' ref={coinInfo}><p className=\"result-wallet__info\">Баланс кошелька {coin.addrStr} = {coin.balance}</p><a className='btn btn-success' href=\"#\" onClick={handleClick}>Скачать</a></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BalanceWallet;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport BalanceWallet from '../BalanceWallet/BalanceWallet';\n\nfunction App() {\n\n  const [crypto, setCrypto] = useState([]);\n  const [limit, setLimit] = useState(10);\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      const responce = await fetch(`https://api.coincap.io/v2/assets?limit=${limit}`, {\n        method: \"GET\"\n      });\n      const result = await responce.json();\n      setCrypto(result.data);\n    }\n    fetchMyAPI()\n  }, [limit])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <BalanceWallet/>\n        <h2 className='text-center mt-5 mb-2'>Список криптовалюты</h2>\n        <ul className=\"crypto-list list-group\">\n          <li className='list-group-item active'>\n            <div className=\"row text-center\">\n              <div className='col-4'>Rank</div>\n              <div className='col-4'>Name</div>\n              <div className='col-4'>priceUsd</div>\n            </div>\n          </li>\n          {crypto.map(item => (\n            <li className='list-group-item' key={uuidv4()}>\n              <div className=\"row text-center\">\n                <div className='col-4'>{item.rank}</div>\n                <div className='col-4'>{item.name}</div>\n                <div className='col-4'>{item.priceUsd}</div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        \n        <button className='crypto-list-btn btn btn-primary' onClick={() => setLimit((prev) => prev + 10)}>Показать еще 10</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);"],"sourceRoot":""}